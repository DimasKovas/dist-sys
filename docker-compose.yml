version: "3"
services:
    database:
        image: postgres
        ports:
            - 8082:5432
        environment:
            POSTGRES_PASSWORD: DB_PASSWORD
    item-storage:
        build: 
            context: ./
            dockerfile: Dockerfile-base
            args:
                service_name: item-storage
        ports:
            - 8080:8080
        depends_on:
            - "database"
        command: ["./wait-for-it.sh", "database:5432", "--", "./item-storage"]
        environment:
            DATABASE_URL: "postgres://postgres:DB_PASSWORD@database:5432/postgres"
            AUTH_SERVER_ADDRESS: "http://auth:8080/validate"
    auth:
        build:
            context: ./
            dockerfile: Dockerfile-base
            args:
                service_name: authentication
        ports:
            - 8081:8080
        depends_on:
            - "database"
            - "rabbit-mq"
        command: ["./wait-for-it.sh", "database:5432", "--", 
                  "./wait-for-it.sh", "rabbit-mq:5672", "-t", "60", "--",
                  "./authentication"]
        environment:
            DATABASE_URL: "postgres://postgres:DB_PASSWORD@database:5432/postgres"
            MESSAGE_QUEUE_URL: "amqp://guest:guest@rabbit-mq:5672/"
            TOKEN_LENGTH: "20"
            REFRESH_TOKEN_LIFE_TIME: "24h"
            ACCESS_TOKEN_LIFE_TIME: "30m"
            CONFIRM_TOKEN_LIFE_TIME: "12h"
            CONFIRM_ADDRESS: "http://diko.me:8081/confirm"
    rabbit-mq:
        image: rabbitmq:management
        ports:
            - 8083:15672
    notifier:
        build:
            context: ./
            dockerfile: Dockerfile-base
            args:
                service_name: notifier
        depends_on:
            - "rabbit-mq"
        command: ["./wait-for-it.sh", "rabbit-mq:5672", "-t", "60", "--",
                  "./notifier"]
        environment:
            EMAIL_PROVIDER_ADDRESS: "http://provider-mock:8080/send"
            PROVIDER_API_ID: "1234567890"
            MESSAGE_QUEUE_URL: "amqp://guest:guest@rabbit-mq:5672/"
    provider-mock:
        build:
            context: ./
            dockerfile: Dockerfile-base
            args:
                service_name: provider-mock
        command: ["./provider-mock"]
    item-uploader:
        build:
            context: ./
            dockerfile: Dockerfile-base
            args:
                service_name: item-uploader
        ports:
            - 8084:8080
        depends_on:
            - "rabbit-mq"
        command: ["./wait-for-it.sh", "rabbit-mq:5672", "-t", "60", "--",
                  "./item-uploader"]
        environment: 
            MESSAGE_QUEUE_URL: "amqp://guest:guest@rabbit-mq:5672/"
            BATCH_SIZE: "100"
            AUTH_SERVER_ADDRESS: "http://auth:8080/validate"
    item-importer:
        build:
            context: ./
            dockerfile: Dockerfile-base
            args:
                service_name: item-importer
        depends_on:
            - "rabbit-mq"
            - "database"
        command: ["./wait-for-it.sh", "rabbit-mq:5672", "-t", "60", "--",
                  "./wait-for-it.sh", "database:5432", "--",
                  "./item-importer"]
        environment:
            MESSAGE_QUEUE_URL: "amqp://guest:guest@rabbit-mq:5672/"
            DATABASE_URL: "postgres://postgres:DB_PASSWORD@database:5432/postgres"